name: Version Bump

on:
  push:
    branches:
      - main

jobs:
  version-bump:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Fetch all history for all tags and branches

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Bump version
        run: |
          python bump_version.py --file_path apps/app/build.gradle --type ${{ env.BUMP_TYPE }}

        env:
          BUMP_TYPE: ${{ steps.set-bump-type.outputs.bump_type }}

      - name: Commit and push if changed
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add .
          git commit -m "Bump version from ${{ steps.version_bump.outputs.OLD_VERSION }} to ${{ steps.version_bump.outputs.NEW_VERSION }}" || exit 0  # exit 0 if no changes
          git push
      - name: Create Git tag
        if: steps.version_bump.outputs.NEW_VERSION != ''
        run: |
          git tag -a ${{ steps.version_bump.outputs.NEW_VERSION }} -m "Release ${{ steps.version_bump.outputs.NEW_VERSION }}"
          git push origin ${{ steps.version_bump.outputs.NEW_VERSION }}

      - name: Determine Bump Type
        id: set-bump-type
        run: |
          if [[ "${{ github.event.before }}" == "0000000000000000000000000000000000000000" ]]; then
            echo "First commit, skipping"
            echo "::set-output name=bump_type::skip"
          else
            echo "Checking merged branches..."
            if [[ "${{ github.event.pull_request.merged }}" == "true" ]]; then
              case "${{ github.head_ref }}" in
                "release") echo "::set-output name=bump_type::minor";;
                "hotfix") echo "::set-output name=bump_type::patch";;
                "bump") echo "::set-output name=bump_type::major";;
                *) echo "Merged branch is not for version bumping"; exit 0;;
              esac
            else
              echo "Not a merge commit"
              exit 0
            fi
          fi
